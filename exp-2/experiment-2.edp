load "isoline"
load "ppm2rnm"
load "medit"

real alpha = 0.4;
real beta = 2;
real gamma = 0.6;
real delta = 1;
real scaleFactor = 30;

real uAst = alpha * gamma / (beta + gamma);
real vAst = (1 - uAst) * (uAst + alpha);

int T = 150;
real dt = 0.1;
int timeSteps = T / dt + 1;
int n = 200;

real[int, int] Curves(3, 1);
int[int] be(1);
int nc;
{

    real[int, int] ff1("TN1.pgm");
    int nx = ff1.n, ny = ff1.m;

    mesh Th = square(nx - 1, ny - 1, [ (nx - 1) * (x), (ny - 1) * (1 - y) ]);
    mesh Tf = Th;

    fespace Vh(Th, P1);

    Vh f1;
    f1[] = ff1;
    real vmax = f1[].max;
    real vmin = f1[].min;
    real vm = (vmin + vmax) / 2;
    verbosity = 3;
    nc = isoline(Th, f1, iso = vm, close = 0, Curves, beginend = be, smoothing = .005, ratio = 0.1);
    verbosity = 1;
}

int ic0 = be(0), ic1 = be(1) - 1;

macro GG(i)
border G #i(t = 0, 1)
{
    P = Curve(Curves, be(i * 2), be(i * 2 + 1) - 1, t);
    label = i + 1;
}
real lg #i = Curves(2, be(i * 2 + 1) - 1); // END OF MACRO
GG(0)
func bord = G0(-n);
mesh Th = buildmesh(bord);

fespace Vh(Th,P2);
Vh u, v, wu, wv, uOld, vOld;

u = uAst - 2 * 1e-7 * (x - 0.1 * y - 225/scaleFactor) * (x - 0.1 * y - 675/scaleFactor);
v = vAst - 3 * 1e-5 * (x - 450/scaleFactor) - 1.2 * 1e-4 * (y - 150/scaleFactor);

uOld = u;
vOld = v;

ofstream file("./u_v_count.txt");
int iteration = 0;
for (real t = 0; t < T; t += dt)
{
    solve Predator(v, wv) = int2d(Th)(v * wv / dt - beta * uOld * v * wv / (abs(uOld) + alpha) + gamma * v * wv) - int2d(Th)(vOld * wv / dt) + int2d(Th)(delta * (dx(v) * dx(wv) + dy(v) * dy(wv)));

    solve Prey(u, wu) = int2d(Th)(u * wu / dt - u * wu + u * abs(uOld) * wu) - int2d(Th)(uOld * wu / dt) + int2d(Th)(dx(u) * dx(wu) + dy(u) * dy(wu)) + int2d(Th)(uOld * v * wu / (abs(uOld) + alpha));

    vOld = v;
    uOld = u;

    iteration ++;
    cout<<"Iteration: " << iteration <<endl;
    // plot(u, nbiso = 20, value = 1, fill = 1, cmm = "prey");
    // plot(v, nbiso=40, value=1, fill=1, cmm="predator");

    real ucount = int2d(Th)(u); 
	real vcount = int2d(Th)(v);

	file << t << " ; " << ucount << " ; " << vcount << endl;
}

plot(u, nbiso = 40, value = 1, fill = 1, ps = "prey.ps", cmm = "prey");
plot(v, nbiso = 40, value = 1, fill = 1, ps = "predator.ps", cmm = "predator");

file.flush;
